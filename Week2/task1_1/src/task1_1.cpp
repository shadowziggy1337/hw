#include <iostream>

#include <string>

class Person { // Объявление класса Person
private:
    std::string name; // Приватное поле класса для хранения имени
    int age; // Приватное поле класса для хранения возраста

public:
    // Конструктор по умолчанию
    Person() { // Определение конструктора по умолчанию
        name = "Имя по умолчанию"; // Установка значения "Имя по умолчанию" для имени
        age = 0; // Установка значения 0 для возраста
    }

    // Конструктор с параметрами
    Person(const std::string& n, int a) { // Определение конструктора с параметрами
        name = n; // Установка переданного имени
        age = a; // Установка переданного возраста
    }

    // Геттеры
    std::string getName() const { // Метод для возврата имени
        return name; // Возвращает значение имени
    }

    int getAge() const { // Метод для возврата возраста
        return age; // Возвращает значение возраста
    }

    // Сеттеры
    void setName(const std::string& n) { // Метод для установки имени
        name = n; // Устанавливает переданное значение имени
    }

    void setAge(int a) { // Метод для установки возраста
        age = a; // Устанавливает переданное значение возраста
    }
};

int main() { // Основная функция программы
    // Создание экземпляров класса и вывод данных на экран
    Person person1; // Создание объекта person1 с использованием конструктора по умолчанию
    std::cout << "Человек 1:" << std::endl; // Вывод строки на экран
    std::cout << "Имя: " << person1.getName() << std::endl; // Вывод имени person1
    std::cout << "Возраст: " << person1.getAge() << std::endl; // Вывод возраста person1

    Person person2("Анна", 25); // Создание объекта person2 с использованием конструктора с параметрами
    std::cout << "\nЧеловек 2:" << std::endl; // Вывод строки на экран
    std::cout << "Имя: " << person2.getName() << std::endl; // Вывод имени person2
    std::cout << "Возраст: " << person2.getAge() << std::endl; // Вывод возраста person2

    // Изменение данных и вывод
    person1.setName("Петр"); // Установка нового имени для person1
    person1.setAge(30); // Установка нового возраста для person1
    std::cout << "\nОбновленные данные для Человека 1:" << std::endl; // Вывод строки на экран
    std::cout << "Имя: " << person1.getName() << std::endl; // Вывод обновленного имени person1
    std::cout << "Возраст: " << person1.getAge() << std::endl; // Вывод обновленного возраста person1

    return 0; // Возвращение нуля для завершения программы
}

